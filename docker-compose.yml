version: '3.5'

services:

  #
  # Приложение php-fpm с возможностью входа в bash
  # docker-compose exec app bash
  #
  app:
    build:
      args:
        - DEVELOP=true
      context: ./app
    restart: unless-stopped
    working_dir: /var/www/html
    depends_on:
      - postgres
    volumes:
      - ${APP_CODE}:/var/www/html:delegated

  #
  # Composer
  #
  composer:
    image: composer:latest
    volumes:
      - ${APP_CODE}:/app
      - ./data/composer:/tmp

  #
  # Nginx контейнер, собирается напрямую из образа
  #
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    volumes:
      - ${APP_CODE}:/var/www/html:delegated
      - ./log/nginx:/var/log/nginx:delegated
      - ./nginx/conf.d:/etc/nginx/conf.d/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''  

  #
  # PostgreSQL Основной контейнер с рабочей базой
  #
  postgres:
    image: postgres:12
    shm_size: '512m'
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data:delegated
    ports:
      - 5432:5432

  #
  # Redis
  #
  redis:
    image: redis
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./data/redis:/data

  #
  # Supervisor Worker
  #
  worker:
    build: ./worker
    volumes:
      - ${APP_CODE}:/var/www/html:delegated
      - ./worker/supervisord.d:/etc/supervisord.d
    depends_on:
      - redis

networks:
  default:
    external: 
      name: br0  
